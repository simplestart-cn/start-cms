{"version":3,"sources":["assets/logo.svg","pages/home/home.tsx","router.tsx","index.tsx"],"names":["Home","className","src","logo","alt","React","version","href","target","rel","Page2","lazy","NavigatorFromBaseApp","history","useHistory","useEffect","window","microApp","addDataListener","data","path","location","pathname","push","App","id","onClick","__MICRO_APP_ENVIRONMENT__","setGlobalData","name","__MICRO_APP_NAME__","to","exact","fallback","mount","ReactDOM","render","StrictMode","document","getElementById","console","log","getData","setTimeout","dispatch","myname","unmount","unmountComponentAtNode"],"mappings":"iOAAe,MAA0B,iC,eCyB1BA,MArBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,6DACgBC,IAAMC,WAEtB,mBACEL,UAAU,WACVM,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCRFC,EAAQC,gBAAK,kBAAM,gCAGnBC,EAAuB,WAC3B,IAAMC,EAAUC,cAWhB,OATAC,qBAAU,WAAO,IAAD,EACd,UAAAC,OAAOC,gBAAP,SAAiBC,iBAAgB,SAACC,GAE5BA,EAAKC,MAAQD,EAAKC,OAASP,EAAQQ,SAASC,UAC9CT,EAAQU,KAAKJ,EAAKC,WAGrB,CAACP,IAEG,MAmCMW,MAhCf,WASE,OAEE,cADA,CACC,IAAD,WACE,sBAAKC,GAAG,eAAeC,QAV3B,WACMV,OAAOW,2BAETX,OAAOC,SAASW,cAAc,CAAEC,KAAMb,OAAOc,sBAO7C,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBADF,gBAEE,cAAC,IAAD,CAAMA,GAAG,SAAT,sBAEF,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOX,KAAK,IAAIY,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOZ,KAAK,SAAZ,SACE,cAAC,WAAD,CAAUa,SAAU,6CAApB,SACE,cAACvB,EAAD,QAGJ,cAAC,IAAD,CAAUqB,GAAG,aCOrB,SAASG,IACPC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,iBAG1BC,QAAQC,IAAI,qDA5CRzB,OAAOW,4BAETa,QAAQC,IAAI,yBAA0BzB,OAAOC,SAASyB,WAGtD1B,OAAOC,SAASC,iBAAgB,SAACC,GAC/BqB,QAAQC,IAAI,iCAAkCtB,MAIhDwB,YAAW,WACT3B,OAAOC,SAAS2B,SAAS,CAAEC,OAAQ,oBAClC,MA4CH7B,OAAOW,0BAETX,OAAO,aAAD,OAAcA,OAAOc,qBAAwB,CAAEI,QAAOY,QAR9D,WACEX,IAASY,uBAAuBT,SAASC,eAAe,iBACxDC,QAAQC,IAAI,uDASZP,M","file":"static/js/main.ed42e639.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from '../../assets/logo.svg';\nimport './home.css';\n\nfunction Home () {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          子应用 -- react@{React.version}\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { lazy, Suspense, useEffect } from 'react'\nimport { HashRouter, Switch, Route, Redirect, Link, useHistory } from 'react-router-dom'\nimport Home from './pages/home/home'\n\nconst Page2 = lazy(() => import(/* webpackChunkName: \"page2\" */ './pages/page2/page2'))\n\n// 此组件用于监听基座下发的跳转指令\nconst NavigatorFromBaseApp = () => {\n  const history = useHistory()\n\n  useEffect(() => {\n    window.microApp?.addDataListener((data: Record<string, unknown>) => {\n      // 当基座下发path时进行跳转\n      if (data.path && data.path !== history.location.pathname) {\n        history.push(data.path as string)\n      }\n    })\n  }, [history])\n\n  return null\n}\n\nfunction App () {\n  // 子应用内部跳转时，通知侧边栏改变菜单状态\n  function onRouteChange (): void {\n    if (window.__MICRO_APP_ENVIRONMENT__) {\n      // 发送全局数据，通知侧边栏修改菜单展示\n      window.microApp.setGlobalData({ name: window.__MICRO_APP_NAME__ })\n    }\n  }\n\n  return (\n    // 因为child-react17子应用是hash路由，主应用为history路由，所以不需要设置基础路由__MICRO_APP_BASE_ROUTE__\n    <HashRouter>\n      <div id='public-links' onClick={onRouteChange}>\n        <Link to=\"/\">Home</Link>&ensp;|&ensp;\n        <Link to=\"/page2\">Page2</Link>\n      </div>\n      <NavigatorFromBaseApp />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/page2\">\n          <Suspense fallback={<div>Loading...</div>}>\n            <Page2 />\n          </Suspense>\n        </Route>\n        <Redirect to='/' />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App\n","// 如果应用和框架是同域名部署则不需要引入publi-path,否则动态路由会无法生效\n// import \"./public-path\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './router';\n\ndeclare global {\n  interface Window {\n    microApp: any\n    __MICRO_APP_NAME__: string\n    __MICRO_APP_ENVIRONMENT__: string\n    __MICRO_APP_BASE_ROUTE__: string\n  }\n}\n\n// 与基座的数据交互\nfunction handleMicroData () {\n  // 是否是微前端环境\n  if (window.__MICRO_APP_ENVIRONMENT__) {\n    // 主动获取基座下发的数据\n    console.log('child-react17 getData:', window.microApp.getData());\n\n    // 监听基座下发的数据变化\n    window.microApp.addDataListener((data: Record<string, unknown>) => {\n      console.log('child-react17 addDataListener:', data);\n    })\n\n    // 向基座发送数据\n    setTimeout(() => {\n      window.microApp.dispatch({ myname: 'child-react17' });\n    }, 3000)\n  }\n}\n\n// ----------分割线---默认模式------两种模式任选其一-----放开注释即可运行------- //\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Router />\n//   </React.StrictMode>,\n//   document.getElementById('react17-root')\n// );\n\n// console.log('微应用child-react17渲染了');\n\n// handleMicroData()\n\n// // 监听卸载操作\n// window.addEventListener('unmount', function () {\n//   ReactDOM.unmountComponentAtNode(document.getElementById('react17-root')!);\n//   console.log('微应用child-react17卸载了');\n// })\n\n// ----------分割线---umd模式------两种模式任选其一-------------- //\n// 将渲染操作放入 mount 函数\nfunction mount () {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Router />\n    </React.StrictMode>,\n    document.getElementById('react17-root')\n  );\n\n  console.log('微应用child-react17渲染了');\n\n  handleMicroData()\n}\n\n// 将卸载操作放入 unmount 函数\nfunction unmount () {\n  ReactDOM.unmountComponentAtNode(document.getElementById('react17-root')!);\n  console.log('微应用child-react17卸载了');\n}\n\n// 微前端环境下，注册mount和unmount方法\nif (window.__MICRO_APP_ENVIRONMENT__) {\n  // @ts-ignore\n  window[`micro-app-${window.__MICRO_APP_NAME__}`] = { mount, unmount }\n} else {\n  // 非微前端环境直接渲染\n  mount();\n}\n"],"sourceRoot":""}