<?php

declare(strict_types=1);
// +----------------------------------------------------------------------
// | Generate By StartCMS
// +----------------------------------------------------------------------
// | Github: https://github.com/simplestart-cn/start-cms
// +----------------------------------------------------------------------
// | Copyright (c) http://www.simplestart.cn All rights reserved.
// +----------------------------------------------------------------------

namespace {%namespace%};

use start\Controller;
use app\{%appName%}\service\{%className%}Service;

class {%className%} extends Controller
{
   /**
     * 查看记录
     * @auth
     * 
     * @api            {get}           {%className%}/page            查看记录
     * @apiName        page
     * @apiGroup       {%className%}
     * @apiVersion     v1.0.0
     * @apiDescription 获取分页数据
     * @apiUse         CommonHeader
     * @apiUse         CommonParam
     * @apiUse         PagingParam
     * @apiParam       {string}        [keyword]            关键词
     * @apiUse         CommonSuccess
     * @apiUse         CommonError
     */
    public function page()
    {
        $input = $this->formValidate([
            'keyword.default'  => '',
        ]);
        if (!empty($input['keyword'])) {
            $input['title@like'] = $input['keyword'];
        }
        $list = {%className%}Service::getPage($input);
        $this->success($list);
    }

    /**
     * 获取列表
     * @admin
     * 
     * @api            {get}           {%className%}/list            获取列表
     * @apiName        list
     * @apiGroup       {%className%}
     * @apiVersion     v1.0.0
     * @apiDescription 获取列表数据
     * @apiUse         CommonHeader
     * @apiUse         CommonParam
     * @apiUse         PagingParam
     * @apiParam       {string}        [keyword]            关键词
     * @apiUse         CommonSuccess
     * @apiUse         CommonError
     */
    public function list()
    {
        $input = $this->formValidate([
            'keyword.default'  => '',
            'status.value'     => 1,
        ]);
        if (!empty($input['keyword'])) {
            $input['title@like'] = $input['keyword'];
        }
        $list = {%className%}Service::getList($input);
        $this->success($list);
    }

    /**
     * 查看详情
     * @auth
     * 
     * @api            {get}           {%className%}/info         查看详情
     * @apiName        info
     * @apiGroup       {%className%}
     * @apiVersion     v1.0.0
     * @apiDescription 获取详情数据
     * @apiUse         CommonHeader
     * @apiUse         CommonParam
     * @apiParam       {string}        id                ID
     * @apiUse         CommonSuccess
     * @apiUse         CommonError
     */
    public function info()
    {
        $input = $this->formValidate([
            'id.require' => 'id不能为空'
        ]);
        $model = {%className%}Service::getInfo($input['id']);
        $this->success($model);
    }

    /**
     * 新增记录
     * @auth
     * 
     * @api            {post}    {%className%}/create            新增记录
     * @apiName        create
     * @apiGroup       {%className%}
     * @apiVersion     v1.0.0
     * @apiDescription 新增记录
     * @apiUse         CommonHeader
     * @apiUse         CommonParam
     * @apiParam       {string}        title            名称
     * @apiParam       {string}        [sort=100]       排序
     * @apiParam       {string}        [status=1]       状态
     * @apiUse         CommonSuccess
     * @apiUse         CommonError
     */
    public function create()
    {
        $input = $this->formValidate([
            'title.require' => '名称不能为空',
        ]);
        $model = {%className%}Service::create($input);
        if ($model) {
            $this->success('操作成功', $model);
        } else {
            $this->error('操作失败');
        }
    }

    /**
     * 更新记录
     * @auth
     * 
     * @api            {post}    {%className%}/update            更新记录
     * @apiName        update
     * @apiGroup       {%className%}
     * @apiVersion     v1.0.0
     * @apiDescription 更新记录
     * @apiUse         CommonHeader
     * @apiUse         CommonParam
     * @apiParam       {string}        id               ID
     * @apiParam       {string}        [title]          名称
     * @apiParam       {string}        [sort]           排序
     * @apiParam       {string}        [status]         状态
     * @apiUse         CommonSuccess
     * @apiUse         CommonError
     */
    public function update()
    {
        $input = $this->formValidate([
            'id.require'            => 'id不能为空',
            'title.require|ifexist' => '名称不能为空'
        ]);
        $model = {%className%}Service::update($input);
        if ($model) {
            $this->success('操作成功', $model);
        } else {
            $this->error('操作失败');
        }
    }

    /**
     * 删除记录
     * @auth
     * 
     * @api            {post}    {%className%}/remove                 删除记录
     * @apiName        remove
     * @apiGroup       {%className%}
     * @apiVersion     v1.0.0
     * @apiDescription 删除记录
     * @apiUse         CommonHeader
     * @apiUse         CommonParam
     * @apiParam       {string}                id           ID
     * @apiUse         CommonSuccess
     * @apiUse         CommonError
     */
    public function remove()
    {
        $input = $this->formValidate([
            'id.require' => 'id不能为空',
        ]);
        if ({%className%}Service::remove($input['id'])) {
            $this->success('操作成功');
        } else {
            $this->error('操作失败');
        }
    }

    /**
     * 更新状态
     * @auth
     * 
     * @api            {post}    {%className%}/updateStatus        更新状态
     * @apiName        updateStatus
     * @apiGroup       {%className%}
     * @apiVersion     v1.0.0
     * @apiDescription 更新状态
     * @apiUse         CommonHeader
     * @apiUse         CommonParam
     * @apiParam       {string}        id               ID
     * @apiParam       {string}        status           状态
     * @apiUse         CommonSuccess
     * @apiUse         CommonError
     */
    public function updateStatus()
    {
        $input = $this->formValidate([
            'id.require'     => 'id不能为空',
            'status.require' => 'status不能为空'
        ], true);
        if ({%className%}Service::update($input)) {
            $this->success('操作成功');
        } else {
            $this->error('操作失败');
        }
    }

    /**
     * 批量更新
     * @auth
     * 
     * @api            {post}    {%className%}/updateList           批量更新
     * @apiName        updateList
     * @apiGroup       {%className%}
     * @apiVersion     v1.0.0
     * @apiDescription 批量更新
     * @apiUse         CommonHeader
     * @apiUse         CommonParam
     * @apiParam       {array}              list           列表数据,item项主键不能为空
     * @apiUse         CommonSuccess
     * @apiUse         CommonError
     */
    public function updateList()
    {
        $input = $this->formValidate([
            'list.require' => 'list不能为空',
        ]);
        foreach ($input['list'] as $item) {
            if (!isset($item['id']) || empty($item['id'])) {
                throw_error('item主键id不能为空');
            }
        }
        if ({%className%}Service::saveAll($input['list'], ['status'])) {
            $this->success('操作成功');
        } else {
            $this->error('操作失败');
        }
    }

    /**
     * 批量删除
     * @auth
     * 
     * @api            {post}    {%className%}/removeList           批量删除
     * @apiName        removeList
     * @apiGroup       {%className%}
     * @apiVersion     v1.0.0
     * @apiDescription 批量删除
     * @apiUse         CommonHeader
     * @apiUse         CommonParam
     * @apiParam       {array}              list           ids数据
     * @apiUse         CommonSuccess
     * @apiUse         CommonError
     */
    public function removeList()
    {
        $input = $this->formValidate([
            'list.require' => 'list不能为空',
        ], true);
        if ({%className%}Service::remove($input['list'])) {
            $this->success('操作成功');
        } else {
            $this->error('操作失败');
        }
    }

    /**
     * 批量导入
     * @auth
     *
     * @api            {post}    {%className%}/importList         批量导入
     * @apiName        importList
     * @apiGroup       {%className%}
     * @apiVersion     v1.0.0
     * @apiDescription 批量导入
     * @apiUse         CommonHeader
     * @apiUse         CommonParam
     * @apiParam       {array}              list             列表数据,item项名称不能为空
     * @apiUse         CommonSuccess
     * @apiUse         CommonError
     */
    public function importList()
    {
        $input = $this->formValidate([
            'list.require' => 'list不能为空',
        ]);
        $data = {%className%}Service::import($input['list'], ['title']);
        if ($data) {
            $this->success('操作成功', $data);
        } else {
            $this->error('操作失败');
        }
    }

    /**
     * 批量导出
     * @auth
     *
     * @api            {post}    {%className%}/exportList         批量导出
     * @apiName        exportList
     * @apiGroup       {%className%}
     * @apiVersion     v1.0.0
     * @apiDescription 批量导出
     * @apiUse         CommonHeader
     * @apiUse         CommonParam
     * @apiParam       {string}        [keyword]            名称
     * @apiUse         CommonSuccess
     * @apiUse         CommonError
     */
    public function exportList()
    {
        $input = $this->formValidate([
            'keyword.default'  => '',
            'status.value'     => 1,
            'per_page.default' => 2000
        ]);
        if (!empty($input['keyword'])) {
            $input['title@like'] = $input['keyword'];
        }
        $data = {%className%}Service::getPage($input);
        $this->success($data);
    }
}
